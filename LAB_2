import sys
from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QPushButton, QLineEdit, QLabel

class VehicleManagementSystem(QWidget):
    def __init__(self):
        super().__init__()
        self.vehicle_stack = []
        self.setup_ui()

    def register_vehicle(self):
        vehicle_number = self.vehicle_line_edit.text()

        if not vehicle_number:
            return

        if len(self.vehicle_stack) >= 10:
            self.show_status("No more registrations allowed")
        else:
            self.vehicle_stack.append(vehicle_number)
            self.show_status(f"Vehicle registered: {vehicle_number}")

        self.vehicle_line_edit.clear()

    def show_last_vehicle(self):
        if not self.vehicle_stack:
            self.show_status("No more vehicles remaining")
        else:
            self.show_status(f"Last registered vehicle: {self.vehicle_stack[-1]}")

    def setup_ui(self):
        self.main_layout = QVBoxLayout(self)

        self.vehicle_line_edit = QLineEdit(self)
        self.register_button = QPushButton("Register", self)
        self.show_button = QPushButton("Show", self)
        self.status_label = QLabel(self)

        self.main_layout.addWidget(self.vehicle_line_edit)
        self.main_layout.addWidget(self.register_button)
        self.main_layout.addWidget(self.show_button)
        self.main_layout.addWidget(self.status_label)

        self.register_button.clicked.connect(self.register_vehicle)
        self.show_button.clicked.connect(self.show_last_vehicle)

        self.setLayout(self.main_layout)
        self.setWindowTitle("Vehicle Management System")

    def show_status(self, message):
        self.status_label.setText(message)


def main():
    app = QApplication(sys.argv)

    vehicle_system = VehicleManagementSystem()
    vehicle_system.show()

    sys.exit(app.exec_())


if __name__ == "__main__":
    main()
